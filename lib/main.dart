import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart';

import 'package:provider/provider.dart';
import 'state/app_state.dart';
import 'state/auth_state.dart';

import 'views/splash_screen.dart';
import 'views/login.dart';
import 'views/create_account.dart';
import 'views/verification.dart';
import 'views/forgot_password.dart';
import 'views/home_engtooshi.dart';
import 'views/home_oshitoeng.dart';
import 'views/favourites.dart';

Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();

  // Firebase init (generated by flutterfire configure)
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  runApp(
    MultiProvider(
      providers: [
        ChangeNotifierProvider(create: (_) => AppState()),  // favourites
        ChangeNotifierProvider(create: (_) => AuthState()), // firebase auth
      ],
      child: const App(),
    ),
  );
}

class App extends StatelessWidget {
  const App({super.key});

  @override
  Widget build(BuildContext context) {
    final themePink = Colors.pink;

    // Rebuild when auth changes
    return Consumer<AuthState>(
      builder: (_, auth, __) {
        final loggedIn = auth.user != null;

        return MaterialApp(
          debugShowCheckedModeBanner: false,
          title: 'Oshiwambo Translator',
          theme: ThemeData(
            colorScheme: ColorScheme.fromSeed(seedColor: themePink),
            useMaterial3: true,
          ),
          // If logged in, drop them into the translator. Otherwise go to login.
          initialRoute: loggedIn ? '/home_eng' : '/login',

          routes: {
            // Auth flow
            '/splash'     : (_) => const SplashScreen(),
            '/login'      : (_) => const LoginScreen(),
            '/signup'     : (_) => const CreateAccountScreen(),
            '/verify'     : (_) => const VerificationScreen(),
            '/forgot'     : (_) => const ForgotPasswordScreen(),

            // Translator
            '/home_eng'   : (_) => const HomeEngToOshi(),
            '/home_oshi'  : (_) => const HomeOshiToEng(),

            // Favourites
            '/favourites' : (_) => const FavouritesScreen(),
          },
        );
      },
    );
  }
}


